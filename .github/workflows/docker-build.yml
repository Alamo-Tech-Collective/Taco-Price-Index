name: Build and Push Docker Image

on:
  push:
    branches: [ui-restored]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: tacos
          POSTGRES_PASSWORD: tacos_password
          POSTGRES_DB: tacos_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.6'
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          bundle install
          yarn install --frozen-lockfile

      - name: Setup database
        env:
          DATABASE_URL: postgres://tacos:tacos_password@localhost:5432/tacos_test
          RAILS_ENV: test
        run: |
          bin/rails db:schema:load

      - name: Run tests
        env:
          DATABASE_URL: postgres://tacos:tacos_password@localhost:5432/tacos_test
          RAILS_ENV: test
          SKIP_SANITY_CHECK: true
        run: |
          bin/rails test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            tmp/screenshots/
            log/test.log
          retention-days: 7

      - name: Run Rubocop
        run: bundle exec rubocop

      - name: Run Brakeman security scan
        run: bundle exec brakeman --no-pager

  build-image:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}